name: DevSec CI

on:
  push:
  pull_request:

jobs:
  sast-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set BASE and HEAD SHAs
        id: shas
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "BASE_SHA=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV
            echo "HEAD_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          else
            # for push events, compare against origin/main (ensure it's fetched)
            git fetch origin main --depth=1 || true
            BASE=$(git rev-parse origin/main 2>/dev/null || echo "")
            echo "BASE_SHA=$BASE" >> $GITHUB_ENV
            echo "HEAD_SHA=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: Skip scan if base and head are identical
        run: |
          if [ "${BASE_SHA}" = "${HEAD_SHA}" ] || [ -z "${BASE_SHA}" ]; then
            echo "Base and head are the same or base missing; skipping TruffleHog scan."
            echo "SKIP_TRUFFLEHOG=1" >> $GITHUB_ENV
          else
            echo "SKIP_TRUFFLEHOG=0" >> $GITHUB_ENV
          fi

      - name: Run TruffleHog OSS
        if: env.SKIP_TRUFFLEHOG != '1'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ env.BASE_SHA }}
          head: ${{ env.HEAD_SHA }}
          extra_args: --debug --only-verified

  code-ql:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: python
      - uses: github/codeql-action/analyze@v3


  container-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build -t chatbot:ci .
      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: chatbot:ci
          format: sarif
          output: trivy-results.sarif
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
    
  test-and-scan:
    runs-on: ubuntu-latest
    env:
      # prevent heavy model downloads in CI
      SKIP_MODEL_LOAD: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint (flake8)
        run: |
          flake8 .

      - name: Dependency vulnerability scan (pip-audit)
        run: |
          pip install pip-audit
          pip-audit -r requirements.txt --progress-spinner=off --format=json -o pip-audit.json || true

        
      - name: Static security scan (Bandit)
        run: |
          bandit -r app -lll -f json -o bandit-report.json || true

      - name: Dependency vulnerability scan (pip-audit)
        run: |
          pip-audit --progress-spinner=off --format=json -o pip-audit.json || true

      - name: Run tests
        run: |
          python -m pytest -q

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            pip-audit.json